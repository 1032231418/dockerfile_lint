#!/usr/bin/env node

var program = require('commander');
//
//program
//    .version('0.0.1')
//    .command('dockerfile [name]', 'install one or more packages')
//    .command('image [query]', 'search with optional query')
//    .command('list', 'list packages installed')
//    .command('publish', 'publish the package')
//    .parse(process.argv);

// here .command() is invoked with a description,
// and no .action(callback) calls to handle sub-commands.
// this tells commander that you're going to use separate
// executables for sub-commands, much like git(1) and other
// popular tools.

// here only ./pm-install(1) is implemented, however you
// would define ./pm-search(1) and ./pm-list(1) etc.

// Try the following:
//   ./examples/pm
//   ./examples/pm help install
//   ./examples/pm install -h
//   ./examples/pm install foo bar baz
//   ./examples/pm install foo bar baz --force
var runtest = null;
program
    .version('0.0.1')
    .option('-C, --chdir <path> ', 'change the working directory')
    .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')
    .option('-T, --no-tests', 'ignore test hook');

//program
//    .command('setup')
//    .description('run remote setup commands')
//    .action(function() {
//        console.log('setup');
//    });
//
program
    .command('image <cmd> <ima>')
    .description('run the given remote command')
    .action(function(cmd, ima) {
        console.log('exec "%s"', cmd+ima);
    });

//program
//    .command('teardown <dir> [otherDirs...]')
//    .description('run teardown commands')
//    .action(function(dir, otherDirs) {
//        console.log('dir "%s"', dir);
//        if (otherDirs) {
//            otherDirs.forEach(function (oDir) {
//                console.log('dir "%s"', oDir);
//            });
//        }
//    });
//
//program
//    .command('*')
//    .description('deploy the given env')
//    .action(function(env) {
//        console.log('deploying "%s"', env);
//    });

program.parse(process.argv);

console.log("HHEHEHEH   " + program.chdir);
